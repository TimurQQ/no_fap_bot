import os
from datetime import datetime

from config.config import ADMINS
from dispatcher import bot
from logger import noFapLogger


async def send_logs(logsFilePath: str):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ª–æ–≥ —Ñ–∞–π–ª –≤—Å–µ–º –∞–¥–º–∏–Ω–∞–º"""
    if not ADMINS:
        noFapLogger.error(
            "‚ùå –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤ –ø—É—Å—Ç–æ–π! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é ADMINS –≤ .env —Ñ–∞–π–ª–µ"
        )
        return

    if not os.path.exists(logsFilePath):
        noFapLogger.error(f"‚ùå –§–∞–π–ª –ª–æ–≥–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {logsFilePath}")
        return

    success_count = 0
    filename = f"{os.path.basename(logsFilePath)}-{datetime.now().timestamp()}"

    for admin in ADMINS:
        try:
            with open(logsFilePath, "rb") as log_file:
                await bot.send_document(admin, (filename, log_file))
            success_count += 1
        except Exception as e:
            noFapLogger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–æ–≥–∞ –∞–¥–º–∏–Ω—É {admin}: {e}")

    noFapLogger.info(f"üìä –õ–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω {success_count}/{len(ADMINS)} –∞–¥–º–∏–Ω–∞–º")
